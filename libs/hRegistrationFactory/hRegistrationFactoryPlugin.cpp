// /////////////////////////////////////////////////////////////////
// Generated by medPluginGenerator
// /////////////////////////////////////////////////////////////////

#include "hRegistrationFactory.h"
#include "hRegistrationFactoryPlugin.h"

#include <dtkLog/dtkLog.h>

// /////////////////////////////////////////////////////////////////
// hRegistrationFactoryPluginPrivate
// /////////////////////////////////////////////////////////////////

class hRegistrationFactoryPluginPrivate
{
public:
    // Class variables go here.
    static const char *s_Name;
};

const char * hRegistrationFactoryPluginPrivate::s_Name = "hRegistrationFactory";

// /////////////////////////////////////////////////////////////////
// hRegistrationFactoryPlugin
// /////////////////////////////////////////////////////////////////

hRegistrationFactoryPlugin::hRegistrationFactoryPlugin(QObject *parent) : dtkPlugin(parent), d(new hRegistrationFactoryPluginPrivate)
{
    
}

hRegistrationFactoryPlugin::~hRegistrationFactoryPlugin(void)
{
    delete d;
    
    d = NULL;
}

bool hRegistrationFactoryPlugin::initialize(void)
{
    if(!hRegistrationFactory::registered())
        dtkWarn() << "Unable to register hRegistrationFactory type";
    
    return true;
}

bool hRegistrationFactoryPlugin::uninitialize(void)
{
    return true;
}

QString hRegistrationFactoryPlugin::name(void) const
{
    return "hRegistrationFactoryPlugin";
}

QString hRegistrationFactoryPlugin::description(void) const
{
    return tr("");
}

QString hRegistrationFactoryPlugin::version(void) const
{
    return HREGISTRATIONFACTORY_VERSION;
}

QString hRegistrationFactoryPlugin::contact(void) const
{
    return "";
}

QStringList hRegistrationFactoryPlugin::authors(void) const
{
    QStringList list;
    return list;
}

QStringList hRegistrationFactoryPlugin::contributors(void) const
{
    QStringList list;
    return list;
}

QString hRegistrationFactoryPlugin::identifier(void) const
{
    return hRegistrationFactoryPluginPrivate::s_Name;
}


QStringList hRegistrationFactoryPlugin::tags(void) const
{
    return QStringList();
}

QStringList hRegistrationFactoryPlugin::types(void) const
{
    return QStringList() << "hRegistrationFactory";
}
QStringList hRegistrationFactoryPlugin::dependencies(void) const
{
    return QStringList();
}
Q_EXPORT_PLUGIN2(hRegistrationFactoryPlugin, hRegistrationFactoryPlugin)

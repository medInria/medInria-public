// /////////////////////////////////////////////////////////////////
// Generated by dtkPluginGenerator
// /////////////////////////////////////////////////////////////////

#ifndef ITKDATASHIMAGEREADERBASE_H
#define ITKDATASHIMAGEREADERBASE_H

#include <dtkCore/dtkAbstractDataReader.h>

#include "itkDataSHImageReaderPluginExport.h"
#include "itkImageIOBase.h"

class ITKDATASHIMAGEREADERPLUGIN_EXPORT itkDataSHImageReaderBase : public dtkAbstractDataReader
{
    Q_OBJECT

public:
             itkDataSHImageReaderBase(void);
    virtual ~itkDataSHImageReaderBase(void);

    virtual QStringList handled(void) const;

    static QStringList s_handled (void);

public slots:

    /** if number of components of itk vector image is 15 or 28 returns true*/
    virtual bool canRead (const QString &path);
    virtual bool canRead (const QStringList &paths);

    /** it reads the information of vector itkDataSHImageFloat3 or itkDataSHImageDoublet3*/
    virtual bool readInformation (const QString &path);
    virtual bool readInformation (const QStringList &paths);

    /** where the itk::VectorImage<double/float, 3> is read*/
    virtual bool read (const QString &path);
    virtual bool read (const QStringList &paths);

protected:
    itk::ImageIOBase::Pointer io;
};

#endif

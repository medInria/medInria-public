// /////////////////////////////////////////////////////////////////
// Generated by dtkPluginGenerator
// /////////////////////////////////////////////////////////////////
#include "itkDataSHImagePlugin.h"


#include <itkDataSHImageDouble3.h>
#include <itkDataSHImageFloat3.h>

#include <dtkLog/dtkLog.h>

#include <dtkItkLogForwarder/itkLogForwarder.h>


// /////////////////////////////////////////////////////////////////
// itkDataSHImagePluginPrivate
// /////////////////////////////////////////////////////////////////

class itkDataSHImagePluginPrivate {
public:

    itkDataSHImagePluginPrivate() { forwarder = itk::LogForwarder::New(); }
    ~itkDataSHImagePluginPrivate() { }

    // Class variables go here.

    itk::LogForwarder::Pointer forwarder;
};

// /////////////////////////////////////////////////////////////////
// itkDataSHImagePlugin
// /////////////////////////////////////////////////////////////////

itkDataSHImagePlugin::itkDataSHImagePlugin(QObject *parent): dtkPlugin(parent),d(new itkDataSHImagePluginPrivate) { }

itkDataSHImagePlugin::~itkDataSHImagePlugin() {
    delete d;
    d = NULL;
}

bool itkDataSHImagePlugin::initialize() {
    if (!itkDataSHImageDouble3::registered()) { dtkWarn() << "Unable to register itkDataSHImageDouble3 type"; }
    if (!itkDataSHImageFloat3::registered())  { dtkWarn() << "Unable to register itkDataSHImageFloat3 type";  }

    return true;
}

bool itkDataSHImagePlugin::uninitialize() {
    return true;
}

QString itkDataSHImagePlugin::name() const {
    return "itkDataSHImagePlugin";
}

QString itkDataSHImagePlugin::description() const {
    return "Handle ITK Sh image types";
}

QStringList itkDataSHImagePlugin::tags() const {
    return QStringList() << "itk" << "data" << "Sh" << "image";
}

QStringList itkDataSHImagePlugin::types() const {
    return QStringList() << "itkDataSHImageFloat3" << "itkDataSHImageDouble3";
}

Q_EXPORT_PLUGIN2(itkDataSHImagePlugin, itkDataSHImagePlugin)

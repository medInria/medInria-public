vec4 diffuse(	in vec3 l,	// light direction
		in vec3 n)	// normal
{
  float NdotL = max(0.0, dot(n, l));
  return vec4(NdotL, NdotL, NdotL, 1.0);
}

vec4 specular(	in vec3 v,	// view direction
		in vec3 l,	// light direction
		in vec3 n,	// normal
		in float p)	// specular power
{
  vec3 reflectDir = normalize(dot(2.0*n, l) * n - l); 

  float NdotL = max(0.0, dot(n, l));
  float RdotV = max(0.0, dot(reflectDir, v));

  float pf;
  if (NdotL < 0.01)
    pf = 0.0;
  else
    pf = pow(RdotV, p);
    //pf = pow(RdotV, gl_FrontMaterial.shininess);

  return vec4(pf, pf, pf, 1.0);
}

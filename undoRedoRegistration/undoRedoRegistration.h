// /////////////////////////////////////////////////////////////////
// Generated by medPluginGenerator
// /////////////////////////////////////////////////////////////////

#ifndef UNDOREDOREGISTRATION_H
#define UNDOREDOREGISTRATION_H

#include <itkProcessRegistration/itkProcessRegistration.h>
#include "undoRedoRegistrationPluginExport.h"
#include "itkImage.h"

class undoRedoRegistrationPrivate;

/**
 * @brief Registration process.
 *
 * This plugin uses the registration programming interface (RPI).
 * It also implements a custom toolbox plugging itself onto the generic registration toolbox available in medInria/src/medGui.
 *
 */
class UNDOREDOREGISTRATIONPLUGIN_EXPORT undoRedoRegistration : public itkProcessRegistration
{
    Q_OBJECT
    
public:

    typedef itk::Image< float, 3 > RegImageType;
    /**
     * @brief Constructor.
     *
     * @param void
     */
    undoRedoRegistration(void);
    
    /**
     * @brief
     *
     * @param void
     */
    virtual ~undoRedoRegistration(void);
    
    /**
     * @brief Description of the plugin.
     *
     * @param void
     * @return QString
     */
    virtual QString description(void) const;

    virtual void setInput(dtkAbstractData *data, int channel);
    
    /**
     * @brief tries to register the process with the factory.
     *
     * @param void
     * @return bool true if it succeeded, false otherwise.
     */
    static bool registered(void);

    void undo();
    
    void redo();

    void generateOutput();

    virtual itk::Transform<double,3,3>::Pointer getTransform();
    virtual QStringList * getTitleAndParameters();

protected :
    /**
     * @brief
     *
     * @param file The path to the file is assumed to be existing. However the file may not exist beforehand.
     * @return bool successful or not.
     */
    virtual bool writeTransform(const QString& file);

private:
    undoRedoRegistrationPrivate *d;
    
};

/**
 * @brief Function to instantiate the process from the factory.
 * @see registered()
 *
 * @param void
 */
dtkAbstractProcess *createUndoRedoRegistration(void);

#endif

# All the DEFAULT pairs are accessible from any other section. They are overwritten in the sections themselves when needed.
[DEFAULT]
#please use an absolute path for the projects directory
projects_dir=FILL_THIS_VALUE
#path to the directory where source tar files are downloaded
archive_dir=%(projects_dir)s/archive
#template name for where to uncompress or where is the cloned repository
#%(__name__)s is always the name of the current section
destination_dir=%(__name__)s
#must be set inside the session
source_file=dummy
#path to the build directory. Relative to the destination_dir
build_dir=build
cmake_configure_dir=

#command to uncompress a wget obtained file. Copies it in the right directory
#uncompress_command=mkdir -p %(destination_dir)s && tar -xzf %(archive_dir)s/%(source_file)s -C %(destination_dir)s
uncompress_command=python_tar

#command run after setup
extra_create_dirs_cmd=

#use after ctest -D 
#here we use experimental at the moment, guess why? it's still expereimental.
ctest_build_type=Experimental
#Source control management 
scm=wget
#ssh or git. 
#May work with http. Svn accept ssh or any value. 
#Look at README for more info
scm_protocol=git
#user name to use when connecting somewhere
username=

#version strings
version_major=
version_minor=
version_patch=
version=%(version_major)s.%(version_minor)s.%(version_patch)s

#in case the cmake project name is different from the actual name:
#e.g.: ttk-public compiles under the project name ttk (ttk.sln for VS)
project_name=%(__name__)s
#checkout master after git update
#(for a remote branch give full path, e.g. 'origin/master')
branch=master

#type of configuration step: can be cmake or autoconf
configure_type=cmake
#set up the build type in cmake files
build_type=Release
#number of parallel jobs in make
cpus=2
#command run after build
extra_build_cmd=

#command run after packaging
#extra_package_cmd=mkdir -p %(archive_dir)s/packages && cp _CPack_Packages/Linux/RPM/*.rpm %(archive_dir)s/packages/
#not needed anymore on Linux, using:
#CPACK_OUTPUT_FILE_PREFIX:PATH=%(package_dir)s in cmake
extra_package_cmd=

#when running the make rule for the doc, name of the target:
#make doc_command 
doc_command=doc

#command run after running the doc command
extra_doc_cmd=mkdir -p %(archive_dir)s/doc/%(project_name)s && cp -r doc/html %(archive_dir)s/doc/%(project_name)s

#command run after code update
extra_update_cmd=
extra_update_cmd=

#different actions, no effect if the command line argument says they are disabled
create_dirs=1
update_dirs=1
configure=1
build=1
install=0
package=1
doc=0
test=0

#prompt the user for confirmation after each task before proceeding
interactive = 0

#some cmake/visual studio values:
generator_type=
win32_configuration=

#List of path to executables and their options
[commands]
cmake=cmake
cpack=cpack
visual_build=msbuild /M
ctest=ctest
make=make
svn=svn
git=git
wget=wget -c --no-clobber -nv --directory-prefix=%(archive_dir)s
pre_exec=

#not used yet, still Work In Progress
[win_spec]
generator_type=
win32_configuration="Release|Win32" 


#binary build dependencies in terms package management system (yum or apt)
[package_deps]
install=1
#can be yum or apt for the moment
package_manager=yum
#list of packages needed for building
deps=git wget qt4 qt4-devel qt-webkit-devel swig python python-devel tcl tcl-devel tk tk-devel openssl openssl-devel libedit openmpi libXNVCtrl-devel uuid-devel tcp_wrappers-devel redhat-lsb libpng-devel libtiff-devel


[logging]
filename=log.cfg

[projects]
#list of projects to compile (can be dependencies or actual targets)
projects= TCLAP,dtk,medInria,itk,vtk,dcmtk,vtkinria3d-public,ttk-public,asclepiospublic,qtdcm,medInria-plugins


#project template:
#[projName]
##optional values are in DEFAULT
#scm=wget
#uncompress_command=tar -xvzf
#extra_create_dirs_cmd=
##mandatory
#source_host=
#source_file=
#destination_dir=
##source directory cmake will configure, in case we do not want to point to the base dir
#cmake_configure_dir=

#common cmake values. Are prepended to all other cmake configs
[cmake-common]
CMAKE_BUILD_TYPE:STRING=%(build_type)s
CMAKE_INSTALL_PREFIX:STRING=/usr/local/inria
CPACK_USE_DESTDIR:BOOL=ON
CPACK_BINARY_RPM:BOOL=ON
BUILD_DOCUMENTATION:BOOL=OFF
#[project]-cmake are the cmake flags for 'project'

[itk-cmake]
BUILD_EXAMPLES:BOOL=OFF
BUILD_SHARED_LIBS:BOOL=ON
BUILD_TESTING:BOOL=OFF
BUILD_DOXYGEN:BOOL=OFF
ITK_USE_REVIEW:BOOL=ON
ITK_USE_REVIEW_STATISTICS:BOOL=ON
ITK_INSTALL_NO_DEVELOPMENT:BOOL=ON
#ITK_USE_CENTERED_PIXEL_COORDINATES_CONSISTENTLY:BOOL=ON

[vtk-cmake]
BUILD_DOXYGEN:BOOL=OFF
BUILD_EXAMPLES:BOOL=OFF
BUILD_SHARED_LIBS:BOOL=ON
BUILD_TESTING:BOOL=OFF
#check with 5.4.6 version
VTK_USE_QT:BOOL=ON
#for vtk version 5.4.2:
#VTK_USE_QVTK:BOOL=ON
#VTK_USE_GUISUPPORT:Bool=ON
#DESIRED_QT_VERSION:String=4
VTK_USE_NVCONTROL:BOOL=ON
VTK_WRAP_TCL:BOOL=ON
VTK_INSTALL_NO_DEVELOPMENT:BOOL=ON

[dtk-cmake]
BUILD_EXAMPLES:BOOL=ON
BUILD_SHARED_LIBS:BOOL=ON
BUILD_TOOLS:BOOL=OFF
BUILD_WRAPPERS:BOOL=OFF
USE_MPI:BOOL=OFF

[vtkinria3d-public-cmake]
ITK_DIR:PATH=%(projects_dir)s/itk-3.20.1/%(build_dir)s
VTK_DIR:PATH=%(projects_dir)s/vtk-5.8.0/%(build_dir)s
vtkINRIA3D_USE_ITK:BOOL=ON
vtkINRIA3D_BUILD_EXAMPLES:BOOL=OFF
vtkINRIA3D_INSTALL_NO_DEVELOPMENT:BOOL=ON


[ttk-public-cmake]
ITK_DIR:PATH=%(projects_dir)s/itk-3.20.1/%(build_dir)s
VTK_DIR:PATH=%(projects_dir)s/vtk-5.8.0/%(build_dir)s
TTK_USE_ACML:BOOL=OFF
TTK_USE_MIPS:BOOL=OFF
TTK_USE_MKL:BOOL=OFF
# needed to install libITKTensor
TTK_INSTALL_NO_DEVELOPMENT:BOOL=OFF
# we don't want those binaries
TTK_INSTALL_NO_RUNTIME:BOOL=ON


[medInria-cmake]
dtk_DIR:PATH=%(projects_dir)s/dtk/build
dtk_DIR:PATH=%(projects_dir)s/dtk/%(build_dir)s

[medInria-plugins-cmake]
DCMTK_DIR:PATH=%(projects_dir)s/dcmtk/%(build_dir)s
DCMTK_SOURCE_DIR:PATH=%(projects_dir)s/dcmtk
ITK_DIR:PATH=%(projects_dir)s/itk-3.20.1/%(build_dir)s
VTK_DIR:PATH=%(projects_dir)s/vtk-5.8.0/%(build_dir)s
dtk_DIR:PATH=%(projects_dir)s/dtk/%(build_dir)s
vtkINRIA3D_DIR:PATH=%(projects_dir)s/vtkinria3d-public/%(build_dir)s
medInria_DIR:PATH=%(projects_dir)s/medInria/%(build_dir)s
TTK_DIR:PATH=%(projects_dir)s/ttk-public/%(build_dir)s
RPI_DIR:PATH=%(projects_dir)s/asclepiospublic/%(build_dir)s
QTDCM_DIR:PATH=%(projects_dir)s/qtdcm/%(build_dir)s
#plugins, and optional builds:
MEDINRIA_BUILD_TOOLS:BOOL=ON
#we do not build all plugins, only default ones
#(no composite dataset for the moment)
MEDINRIA_BUILD_ALL_PLUGINS:BOOL=OFF

[qtdcm-cmake]
BUILD_PACKAGE:BOOL=ON
BUILD_SHARED_LIBS:BOOL=ON
#the following two lines need to be changed for a full configuration of dcmtk
DCMTK_DIR:PATH=%(projects_dir)s/dcmtk/%(build_dir)s
DCMTK_SOURCE_DIR:PATH=%(projects_dir)s/dcmtk
ITK_DIR:PATH=%(projects_dir)s/itk-3.20.1/%(build_dir)s


[gdcm-cmake]
GDCM_BUILD_APPLICATIONS:BOOL=OFF
GDCM_BUILD_EXAMPLES:BOOL=OFF
GDCM_BUILD_SHARED_LIBS:BOOL=ON
GDCM_BUILD_TESTING:BOOL=OFF
GDCM_USE_VTK:BOOL=OFF

[dcmtk-cmake]
BUILD_SHARED_LIBS:BOOL=ON

[asclepiospublic-cmake]
ITK_DIR:PATH=%(projects_dir)s/itk-3.20.1/%(build_dir)s
RPI_BUILD_EXAMPLES:BOOL=ON
TCLAP_INCLUDE_DIR:PATH=%(projects_dir)s/tclap-1.2.0/include/

[TCLAP]
version=1.2.0
source_host=http://sourceforge.net/projects/tclap/files/
source_file=tclap-%(version)s.tar.gz
destination_dir=tclap-%(version)s
extra_create_dirs_cmd=mv %(destination_dir)s/tclap-%(version)s/* %(destination_dir)s/ && rmdir "%(destination_dir)s/tclap-%(version)s"
#just need to download, no building necessary.
configure=0
build=0
install=0
package=0


[asclepiospublic]
scm=git
source_host=scm.gforge.inria.fr
source_file=asclepiospublic/asclepiospublic.git
project_name=RPI


#project setup values
[vtk]
version_major=5
version_minor=8
version_patch=0
#source host, does not include file for wget obtained files
source_host=http://www.vtk.org/files/release/%(version_major)s.%(version_minor)s
source_file=vtk-%(version)s.tar.gz
scm=wget
destination_dir=vtk-%(version)s
#move up one directory the content of the VTK uncompressed directory 
extra_create_dirs_cmd=mv %(destination_dir)s/VTK/* %(destination_dir)s/ && rmdir "%(destination_dir)s/VTK"
#do not install nor package it

[itk]
version_major=3
version_minor=20
version_patch=1
version=%(version_major)s.%(version_minor)s.%(version_patch)s
source_host=http://downloads.sourceforge.net/project/itk/itk/%(version_major)s.%(version_minor)s
source_file=InsightToolkit-%(version)s.tar.gz
scm=wget
destination_dir=itk-%(version)s
extra_create_dirs_cmd=mv %(destination_dir)s/InsightToolkit-%(version)s/* %(destination_dir)s/ && rmdir "%(destination_dir)s/InsightToolkit-%(version)s"
#do not install nor package it


[dtk]
#careful only works with ssh access for the moment, 
#puts a ':' between source_host and source_file
source_host=dtk.inria.fr
source_file=+medinria/dtk/dtk-clone-medinria.git
scm=git
username=git
destination_dir=dtk
doc_command=dtk-doc

[medInria]
source_host=dev-med.inria.fr
source_file=medinria/medinria.git
scm=git
doc_command=medInria-doc

[vtkinria3d-public]
source_host=dev-med.inria.fr
source_file=vtkinria3d/vtkinria3d.git
scm=git
#destination_dir=vtkinria3d-public
#extra_create_dirs_cmd=mv %(destination_dir)s/%(__name__)s-%(version)s/* %(destination_dir)s/
#the destination is called vtkinria3d, but the cmake project name is vtkinria3d
project_name=vtkinria3d

[medInria-plugins]
source_host=dev-med.inria.fr
source_file=medinria/medinria-plugins.git
scm=git
doc_command=medInria-plugins-doc


[dcmtk]
version_major=3
version_minor=6
version_patch=0
source_host=dev-med.inria.fr
source_file=dcmtk/dcmtk.git
scm=git

[gdcm]
version_major=2
version_minor=0
version_patch=15
#source_host=http://sourceforge.net/settings/mirror_choices?projectname=gdcm&filename=gdcm%202.x/GDCM%20%(version)s
source_file=gdcm-%(version)s.tar.gz
scm=wget

[qtdcm]
source_host=gforge.inria.fr
source_file=git/qtdcm/qtdcm.git
scm=git
scm_protocol=https

#needs to be updated with new repos
[ttk-public]
source_host= svn://scm.gforge.inria.fr/svn
source_file=ttk/trunk
scm=svn
scm_protocol=svn

#same reason as vtkinria3d
project_name=ttk


[medInria-data]
configure=0
build=0
install=0
package=0
source_host=dev-med.inria.fr
source_file=medinria/medinria-data.git
scm=git

